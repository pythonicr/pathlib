[{"path":"https://pythonicr.github.io/pathlib/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pathlib authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pythonicr.github.io/pathlib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrett Shipley. Author, maintainer.","code":""},{"path":"https://pythonicr.github.io/pathlib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shipley G (2024). pathlib: Python-ish path operations. R package version 0.0.1,  https://github.com/pythonicr/pathlib/, https://pythonicr.github.io/pathlib/.","code":"@Manual{,   title = {pathlib: Python-ish path operations},   author = {Garrett Shipley},   year = {2024},   note = {R package version 0.0.1,  https://github.com/pythonicr/pathlib/},   url = {https://pythonicr.github.io/pathlib/}, }"},{"path":[]},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Python-ish path operations","text":"pathlib R package provides comprehensive set functions performing filesystem path operations, inspired Python’s pathlib module. package aims make path manipulations R intuitive accessible, especially users familiar Python’s pathlib methods. functions pathlib leverage fs checkmate packages ensure efficient reliable path operations.","code":""},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Python-ish path operations","text":"can install pathlib package directly GitHub.","code":"# Install devtools if you haven't already install.packages(\"devtools\")  # Install pathlib package from GitHub devtools::install_github(\"pythonicr/pathlib\")"},{"path":[]},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"basic-usage","dir":"","previous_headings":"Getting Started","what":"Basic Usage","title":"Python-ish path operations","text":"examples demonstrating use functions provided pathlib package.","code":""},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-the-absolute-path","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get the Absolute Path","title":"Python-ish path operations","text":"Path_absolute function returns absolute path input path, similar Python’s pathlib.Path.resolve() pathlib.Path.absolute() methods.","code":"library(pathlib)  # Get the absolute path abs_path <- Path_absolute(\"relative/path/to/file.txt\") print(abs_path)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"change-the-mode-permissions-of-a-file-or-directory","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Change the Mode (Permissions) of a File or Directory","title":"Python-ish path operations","text":"Path_chmod function changes mode (permissions) specified file directory.","code":"# Change file permissions Path_chmod(\"file.txt\", \"755\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-the-current-working-directory","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get the Current Working Directory","title":"Python-ish path operations","text":"Path_cwd function returns current working directory, similar Python’s pathlib.Path.cwd() method.","code":"# Get the current working directory current_dir <- Path_cwd() print(current_dir)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-exist","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths Exist","title":"Python-ish path operations","text":"Path_exists function checks specified files directories exist.","code":"# Check if paths exist exists <- Path_exists(\"file.txt\") print(exists)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"expand-the-tilde--in-file-paths","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Expand the Tilde (~) in File Paths","title":"Python-ish path operations","text":"Path_expanduser function replaces tilde (~) character user’s home directory path.","code":"# Expand tilde in paths expanded_path <- Path_expanduser(\"~/Documents/file.txt\") print(expanded_path)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"glob-for-files-matching-a-pattern","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Glob for Files Matching a Pattern","title":"Python-ish path operations","text":"Path_glob function searches files matching specified patterns returns paths.","code":"# Glob for files files <- Path_glob(\"*.txt\") print(files)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-the-group-owner-of-files-or-directories","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get the Group Owner of Files or Directories","title":"Python-ish path operations","text":"Path_group function returns group owner provided paths.","code":"# Get group owner of files group_owner <- Path_group(\"file.txt\") print(group_owner)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"create-hard-links","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Create Hard Links","title":"Python-ish path operations","text":"Path_hardlink_to function creates hard links specified paths target paths.","code":"# Create hard link Path_hardlink_to(\"file.txt\", \"hardlink.txt\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-the-users-home-directory","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get the User’s Home Directory","title":"Python-ish path operations","text":"Path_home function returns user’s home directory.","code":"# Get home directory home_dir <- Path_home() print(home_dir)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-absolute","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Absolute","title":"Python-ish path operations","text":"Path_is_absolute function checks specified paths absolute paths.","code":"# Check if paths are absolute is_abs <- Path_is_absolute(\"/path/to/file.txt\") print(is_abs)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-block-devices","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Block Devices","title":"Python-ish path operations","text":"Path_is_block_device function checks specified paths block devices.","code":"# Check if paths are block devices is_block_device <- Path_is_block_device(\"file.txt\") print(is_block_device)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-character-devices","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Character Devices","title":"Python-ish path operations","text":"Path_is_char_device function checks specified paths character devices.","code":"# Check if paths are character devices is_char_device <- Path_is_char_device(\"file.txt\") print(is_char_device)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-directories","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Directories","title":"Python-ish path operations","text":"Path_is_dir function checks specified paths directories.","code":"# Check if paths are directories is_dir <- Path_is_dir(\"directory\") print(is_dir)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-fifos-named-pipes","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are FIFOs (Named Pipes)","title":"Python-ish path operations","text":"Path_is_fifo function checks specified paths FIFOs (named pipes).","code":"# Check if paths are FIFOs is_fifo <- Path_is_fifo(\"fifo_pipe\") print(is_fifo)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-regular-files","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Regular Files","title":"Python-ish path operations","text":"Path_is_file function checks specified paths regular files.","code":"# Check if paths are files is_file <- Path_is_file(\"file.txt\") print(is_file)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-sockets","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Sockets","title":"Python-ish path operations","text":"Path_is_socket function checks specified paths sockets.","code":"# Check if paths are sockets is_socket <- Path_is_socket(\"socket_file\") print(is_socket)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"check-if-paths-are-symbolic-links","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Check if Paths are Symbolic Links","title":"Python-ish path operations","text":"Path_is_symlink function checks specified paths symbolic links.","code":"# Check if paths are symbolic links is_symlink <- Path_is_symlink(\"symbolic_link\") print(is_symlink)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-file-information-without-following-symbolic-links","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get File Information Without Following Symbolic Links","title":"Python-ish path operations","text":"Path_lstat function retrieves file information provided paths without following symbolic links.","code":"# Get file information without following symbolic links file_info <- Path_lstat(\"file.txt\") print(file_info)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"create-directories","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Create Directories","title":"Python-ish path operations","text":"Path_mkdir function creates directories specified paths. parents argument set TRUE, creates parent directories needed.","code":"# Create directory Path_mkdir(\"new_directory\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-the-owner-of-files-or-directories","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get the Owner of Files or Directories","title":"Python-ish path operations","text":"Path_owner function returns owner provided paths.","code":"# Get owner of files owner <- Path_owner(\"file.txt\") print(owner)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"read-the-content-of-a-file-as-text","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Read the Content of a File as Text","title":"Python-ish path operations","text":"Path_read_text function reads content file specified path text.","code":"# Read text from file text_content <- Path_read_text(\"file.txt\", encoding = \"UTF-8\") print(text_content)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-the-target-path-of-a-symbolic-link","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get the Target Path of a Symbolic Link","title":"Python-ish path operations","text":"Path_readlink function returns target path specified symbolic links.","code":"# Get target path of symbolic link target_path <- Path_readlink(\"symbolic_link\") print(target_path)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"rename-files-or-directories","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Rename Files or Directories","title":"Python-ish path operations","text":"Path_rename function renames files directories current paths new paths.","code":"# Rename file Path_rename(\"old_file.txt\", \"new_file.txt\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"remove-directories","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Remove Directories","title":"Python-ish path operations","text":"Path_rmdir function removes directories specified paths.","code":"# Remove directory Path_rmdir(\"empty_directory\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"get-file-information","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Get File Information","title":"Python-ish path operations","text":"Path_stat function retrieves file information provided paths, allowing optional argument follow_symlinks specify whether symbolic links followed obtaining file information.","code":"# Get file information file_info <- Path_stat(\"file.txt\", follow_symlinks = TRUE) print(file_info)"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"create-symbolic-links","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Create Symbolic Links","title":"Python-ish path operations","text":"Path_symlink_to function creates symbolic links specified paths target paths.","code":"# Create symbolic link Path_symlink_to(\"source_file.txt\", \"target_file.txt\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"touch-files","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Touch Files","title":"Python-ish path operations","text":"Path_touch function creates files exist updates access modification times exist.","code":"# Touch file Path_touch(\"file.txt\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"unlink-delete-files","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Unlink (Delete) Files","title":"Python-ish path operations","text":"Path_unlink function unlinks (deletes) files specified paths.","code":"# Unlink file Path_unlink(\"file.txt\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"write-text-to-a-file","dir":"","previous_headings":"Getting Started > Basic Usage","what":"Write Text to a File","title":"Python-ish path operations","text":"Path_write_text function writes provided text file specified path.","code":"# Write text to file Path_write_text(\"file.txt\", \"Hello, World!\")"},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Python-ish path operations","text":"welcome contributions pathlib package. suggestions, bug reports, want contribute code, please open issue submit pull request GitHub repository. [x] pathlib.Path.absolute [x] pathlib.Path.chmod [x] pathlib.Path.cwd [x] pathlib.Path.exists [x] pathlib.Path.expanduser [x] pathlib.Path.glob [x] pathlib.Path.group [x] pathlib.Path.hardlink_to [x] pathlib.Path.home [x] pathlib.Path.is_block_device [x] pathlib.Path.is_char_device [x] pathlib.Path.is_dir [x] pathlib.Path.is_fifo [x] pathlib.Path.is_file [ ] pathlib.Path.is_junction [ ] pathlib.Path.is_mount [x] pathlib.Path.is_socket [x] pathlib.Path.is_symlink [ ] pathlib.Path.iterdir [ ] pathlib.Path.lchmod [x] pathlib.Path.lstat [x] pathlib.Path.mkdir [ ] pathlib.Path.open [x] pathlib.Path.owner [ ] pathlib.Path.read_bytes [x] pathlib.Path.read_text [x] pathlib.Path.readlink [x] pathlib.Path.rename [ ] pathlib.Path.replace [x] pathlib.Path.resolve [ ] pathlib.Path.rglob [x] pathlib.Path.rmdir [ ] pathlib.Path.samefile [x] pathlib.Path.stat [x] pathlib.Path.symlink_to [x] pathlib.Path.touch [x] pathlib.Path.unlink [ ] pathlib.Path.walk [ ] pathlib.Path.write_bytes [x] pathlib.Path.write_text","code":""},{"path":"https://pythonicr.github.io/pathlib/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Python-ish path operations","text":"pathlib released MIT License. See LICENSE file package’s repository details.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the absolute path of the provided path. — Path_absolute","title":"Get the absolute path of the provided path. — Path_absolute","text":"function returns absolute path input path, similar behavior Python's pathlib.Path.resolve() pathlib.Path.absolute() methods.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the absolute path of the provided path. — Path_absolute","text":"","code":"Path_absolute(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the absolute path of the provided path. — Path_absolute","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the absolute path of the provided path. — Path_absolute","text":"character vector containing absolute paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_absolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the absolute path of the provided path. — Path_absolute","text":"","code":"if (FALSE) { Path_absolute(\"relative/path/to/file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_chmod.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the mode (permissions) of a file or directory. — Path_chmod","title":"Change the mode (permissions) of a file or directory. — Path_chmod","text":"function changes mode (permissions) specified file directory provided mode.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_chmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the mode (permissions) of a file or directory. — Path_chmod","text":"","code":"Path_chmod(paths, mode)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_chmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the mode (permissions) of a file or directory. — Path_chmod","text":"paths character vector file paths. mode mode (permissions) set file directory.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_chmod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the mode (permissions) of a file or directory. — Path_chmod","text":"","code":"if (FALSE) { Path_chmod(\"file.txt\", \"755\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_cwd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the current working directory. — Path_cwd","title":"Get the current working directory. — Path_cwd","text":"function returns current working directory character vector, similar Python's pathlib.Path.cwd() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_cwd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the current working directory. — Path_cwd","text":"","code":"Path_cwd()"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_cwd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the current working directory. — Path_cwd","text":"character vector containing current working directory.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_cwd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the current working directory. — Path_cwd","text":"","code":"if (FALSE) { Path_cwd() }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths exist. — Path_exists","title":"Check if the provided paths exist. — Path_exists","text":"function checks specified files directories exist returns logical vector indicating existence, similar Python's pathlib.Path.exists() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths exist. — Path_exists","text":"","code":"Path_exists(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths exist. — Path_exists","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths exist. — Path_exists","text":"logical vector indicating existence path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths exist. — Path_exists","text":"","code":"if (FALSE) { Path_exists(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_expanduser.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand the tilde (~) in file paths to the user's home directory. — Path_expanduser","title":"Expand the tilde (~) in file paths to the user's home directory. — Path_expanduser","text":"function replaces tilde (~) character user's home directory path provided paths, similar Python's pathlib.Path.expanduser() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_expanduser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand the tilde (~) in file paths to the user's home directory. — Path_expanduser","text":"","code":"Path_expanduser(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_expanduser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand the tilde (~) in file paths to the user's home directory. — Path_expanduser","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_expanduser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand the tilde (~) in file paths to the user's home directory. — Path_expanduser","text":"character vector expanded tilde paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_expanduser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand the tilde (~) in file paths to the user's home directory. — Path_expanduser","text":"","code":"if (FALSE) { Path_expanduser(\"~/Documents/file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_glob.html","id":null,"dir":"Reference","previous_headings":"","what":"Glob for files matching a pattern. — Path_glob","title":"Glob for files matching a pattern. — Path_glob","text":"function searches files matching specified patterns returns paths character vector, similar Python's pathlib.Path.glob() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_glob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glob for files matching a pattern. — Path_glob","text":"","code":"Path_glob(patterns)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_glob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glob for files matching a pattern. — Path_glob","text":"patterns character vector file patterns match.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_glob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glob for files matching a pattern. — Path_glob","text":"character vector containing paths matching files.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_glob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glob for files matching a pattern. — Path_glob","text":"","code":"if (FALSE) { Path_glob(\"*.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the group owner of the specified files or directories. — Path_group","title":"Get the group owner of the specified files or directories. — Path_group","text":"function returns group owner provided paths character vector, similar Python's pathlib.Path.group() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the group owner of the specified files or directories. — Path_group","text":"","code":"Path_group(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the group owner of the specified files or directories. — Path_group","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the group owner of the specified files or directories. — Path_group","text":"character vector containing group owner path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the group owner of the specified files or directories. — Path_group","text":"","code":"if (FALSE) { Path_group(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_hardlink_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a hard link from the paths to the target paths. — Path_hardlink_to","title":"Create a hard link from the paths to the target paths. — Path_hardlink_to","text":"function creates hard links specified paths target paths, similar Python's pathlib.Path.link_to() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_hardlink_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a hard link from the paths to the target paths. — Path_hardlink_to","text":"","code":"Path_hardlink_to(paths, targets)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_hardlink_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a hard link from the paths to the target paths. — Path_hardlink_to","text":"paths character vector source file paths. targets character vector target file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_hardlink_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a hard link from the paths to the target paths. — Path_hardlink_to","text":"","code":"if (FALSE) { Path_hardlink_to(\"file.txt\", \"hardlink.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's home directory. — Path_home","title":"Get the user's home directory. — Path_home","text":"function returns user's home directory character vector, similar Python's pathlib.Path.home() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's home directory. — Path_home","text":"","code":"Path_home()"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_home.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's home directory. — Path_home","text":"character vector containing user's home directory path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_home.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the user's home directory. — Path_home","text":"","code":"if (FALSE) { Path_home() }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are absolute paths. — Path_is_absolute","title":"Check if the provided paths are absolute paths. — Path_is_absolute","text":"function checks specified paths absolute paths returns logical vector indicating result. absolute path path starts root directory, e.g., \"/path//file.txt\", \"C:\\path\\\\file.txt\"","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are absolute paths. — Path_is_absolute","text":"","code":"Path_is_absolute(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are absolute paths. — Path_is_absolute","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are absolute paths. — Path_is_absolute","text":"logical vector indicating whether path absolute path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_absolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are absolute paths. — Path_is_absolute","text":"","code":"if (FALSE) { Path_is_absolute(\"/path/to/file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_block_device.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are block devices. — Path_is_block_device","title":"Check if the provided paths are block devices. — Path_is_block_device","text":"function checks specified paths block devices returns logical vector indicating result. Similar Python's pathlib.Path.is_block_device() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_block_device.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are block devices. — Path_is_block_device","text":"","code":"Path_is_block_device(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_block_device.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are block devices. — Path_is_block_device","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_block_device.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are block devices. — Path_is_block_device","text":"logical vector indicating whether path block device.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_block_device.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are block devices. — Path_is_block_device","text":"","code":"if (FALSE) { Path_is_block_device(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_char_device.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are character devices. — Path_is_char_device","title":"Check if the provided paths are character devices. — Path_is_char_device","text":"function checks specified paths character devices returns logical vector indicating result. Similar Python's pathlib.Path.is_char_device() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_char_device.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are character devices. — Path_is_char_device","text":"","code":"Path_is_char_device(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_char_device.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are character devices. — Path_is_char_device","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_char_device.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are character devices. — Path_is_char_device","text":"logical vector indicating whether path character device.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_char_device.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are character devices. — Path_is_char_device","text":"","code":"if (FALSE) { Path_is_char_device(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are directories. — Path_is_dir","title":"Check if the provided paths are directories. — Path_is_dir","text":"function checks specified paths directories returns logical vector indicating result. Similar Python's pathlib.Path.is_dir() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are directories. — Path_is_dir","text":"","code":"Path_is_dir(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are directories. — Path_is_dir","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are directories. — Path_is_dir","text":"logical vector indicating whether path directory.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are directories. — Path_is_dir","text":"","code":"if (FALSE) { Path_is_dir(\"directory\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_fifo.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are FIFOs (named pipes). — Path_is_fifo","title":"Check if the provided paths are FIFOs (named pipes). — Path_is_fifo","text":"function checks specified paths FIFOs (named pipes) returns logical vector indicating result. Similar Python's pathlib.Path.is_fifo() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_fifo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are FIFOs (named pipes). — Path_is_fifo","text":"","code":"Path_is_fifo(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_fifo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are FIFOs (named pipes). — Path_is_fifo","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_fifo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are FIFOs (named pipes). — Path_is_fifo","text":"logical vector indicating whether path FIFO.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_fifo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are FIFOs (named pipes). — Path_is_fifo","text":"","code":"if (FALSE) { Path_is_fifo(\"fifo_pipe\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are regular files. — Path_is_file","title":"Check if the provided paths are regular files. — Path_is_file","text":"function checks specified paths regular files returns logical vector indicating result. Similar Python's pathlib.Path.is_file() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are regular files. — Path_is_file","text":"","code":"Path_is_file(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are regular files. — Path_is_file","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are regular files. — Path_is_file","text":"logical vector indicating whether path regular file.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are regular files. — Path_is_file","text":"","code":"if (FALSE) { Path_is_file(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_socket.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are sockets. — Path_is_socket","title":"Check if the provided paths are sockets. — Path_is_socket","text":"function checks specified paths sockets returns logical vector indicating result. Similar Python's pathlib.Path.is_socket() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_socket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are sockets. — Path_is_socket","text":"","code":"Path_is_socket(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_socket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are sockets. — Path_is_socket","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_socket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are sockets. — Path_is_socket","text":"logical vector indicating whether path socket.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_socket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are sockets. — Path_is_socket","text":"","code":"if (FALSE) { Path_is_socket(\"socket_file\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_symlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided paths are symbolic links. — Path_is_symlink","title":"Check if the provided paths are symbolic links. — Path_is_symlink","text":"function checks specified paths symbolic links returns logical vector indicating result. Similar Python's pathlib.Path.is_symlink() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_symlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided paths are symbolic links. — Path_is_symlink","text":"","code":"Path_is_symlink(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_symlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided paths are symbolic links. — Path_is_symlink","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_symlink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided paths are symbolic links. — Path_is_symlink","text":"logical vector indicating whether path symbolic link.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_is_symlink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the provided paths are symbolic links. — Path_is_symlink","text":"","code":"if (FALSE) { Path_is_symlink(\"symbolic_link\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_lstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file information without following symbolic links. — Path_lstat","title":"Get file information without following symbolic links. — Path_lstat","text":"function retrieves file information provided paths without following symbolic links. Similar Python's pathlib.Path.lstat() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_lstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file information without following symbolic links. — Path_lstat","text":"","code":"Path_lstat(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_lstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file information without following symbolic links. — Path_lstat","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_lstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file information without following symbolic links. — Path_lstat","text":"list containing file information path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_lstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file information without following symbolic links. — Path_lstat","text":"","code":"if (FALSE) { Path_lstat(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_mkdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create directories at the specified paths. — Path_mkdir","title":"Create directories at the specified paths. — Path_mkdir","text":"function creates directories specified paths. parents argument set TRUE, creates parent directories needed. Similar Python's pathlib.Path.mkdir() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_mkdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create directories at the specified paths. — Path_mkdir","text":"","code":"Path_mkdir(paths, parents = FALSE)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_mkdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create directories at the specified paths. — Path_mkdir","text":"paths character vector directory paths create. parents Logical. TRUE, create parent directories needed.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_mkdir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create directories at the specified paths. — Path_mkdir","text":"","code":"if (FALSE) { Path_mkdir(\"new_directory\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_owner.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the owner of the specified files or directories. — Path_owner","title":"Get the owner of the specified files or directories. — Path_owner","text":"function returns owner provided paths character vector, similar Python's pathlib.Path.owner() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_owner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the owner of the specified files or directories. — Path_owner","text":"","code":"Path_owner(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_owner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the owner of the specified files or directories. — Path_owner","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_owner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the owner of the specified files or directories. — Path_owner","text":"character vector containing owner path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_owner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the owner of the specified files or directories. — Path_owner","text":"","code":"if (FALSE) { Path_owner(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_read_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the content of a file as text. — Path_read_text","title":"Read the content of a file as text. — Path_read_text","text":"function reads content file specified path text, using specified encoding.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_read_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the content of a file as text. — Path_read_text","text":"","code":"Path_read_text(path, encoding = c(\"unknown\", \"UTF-8\", \"latin1\"))"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_read_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the content of a file as text. — Path_read_text","text":"path character vector specifying path file. encoding character encoding use reading file (\"unknown\", \"UTF-8\", \"latin1\").","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_read_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the content of a file as text. — Path_read_text","text":"character vector containing content file.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_read_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the content of a file as text. — Path_read_text","text":"","code":"if (FALSE) { Path_read_text(\"file.txt\", encoding = \"UTF-8\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_readlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the target path of a symbolic link. — Path_readlink","title":"Get the target path of a symbolic link. — Path_readlink","text":"function returns target path specified symbolic links, similar Python's pathlib.Path.readlink() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_readlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the target path of a symbolic link. — Path_readlink","text":"","code":"Path_readlink(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_readlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the target path of a symbolic link. — Path_readlink","text":"paths character vector symbolic link paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_readlink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the target path of a symbolic link. — Path_readlink","text":"character vector containing target path symbolic link.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_readlink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the target path of a symbolic link. — Path_readlink","text":"","code":"if (FALSE) { Path_readlink(\"symbolic_link\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename files or directories to new paths. — Path_rename","title":"Rename files or directories to new paths. — Path_rename","text":"function renames files directories current paths new paths. Similar Python's pathlib.Path.rename() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename files or directories to new paths. — Path_rename","text":"","code":"Path_rename(paths, new_paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename files or directories to new paths. — Path_rename","text":"paths character vector source file paths. new_paths character vector target file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename files or directories to new paths. — Path_rename","text":"","code":"if (FALSE) { Path_rename(\"old_file.txt\", \"new_file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_resolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the absolute path of the provided path. — Path_resolve","title":"Get the absolute path of the provided path. — Path_resolve","text":"function returns absolute path input path, similar behavior Python's pathlib.Path.resolve() pathlib.Path.absolute() methods.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_resolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the absolute path of the provided path. — Path_resolve","text":"","code":"Path_resolve(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_resolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the absolute path of the provided path. — Path_resolve","text":"paths character vector file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_resolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the absolute path of the provided path. — Path_resolve","text":"character vector containing absolute paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_resolve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the absolute path of the provided path. — Path_resolve","text":"","code":"if (FALSE) { Path_absolute(\"relative/path/to/file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rmdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove directories at the specified paths. — Path_rmdir","title":"Remove directories at the specified paths. — Path_rmdir","text":"function removes directories specified paths. first checks directories exist empty. Similar Python's pathlib.Path.rmdir() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rmdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove directories at the specified paths. — Path_rmdir","text":"","code":"Path_rmdir(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rmdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove directories at the specified paths. — Path_rmdir","text":"paths character vector directory paths remove.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_rmdir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove directories at the specified paths. — Path_rmdir","text":"","code":"if (FALSE) { Path_rmdir(\"empty_directory\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file information for the provided paths. — Path_stat","title":"Get file information for the provided paths. — Path_stat","text":"function retrieves file information provided paths, allowing optional argument follow_symlinks specify whether symbolic links followed obtaining file information. Similar Python's pathlib.Path.stat() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file information for the provided paths. — Path_stat","text":"","code":"Path_stat(paths, ..., follow_symlinks = TRUE)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file information for the provided paths. — Path_stat","text":"paths character vector file paths. ... Additional arguments pass fs::file_info(). follow_symlinks Logical. TRUE, follow symbolic links obtain file information.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file information for the provided paths. — Path_stat","text":"list containing file information path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file information for the provided paths. — Path_stat","text":"","code":"if (FALSE) { Path_stat(\"file.txt\", follow_symlinks = TRUE) }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_symlink_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Create symbolic links from the paths to the target paths. — Path_symlink_to","title":"Create symbolic links from the paths to the target paths. — Path_symlink_to","text":"function creates symbolic links specified paths target paths. Similar Python's pathlib.Path.symlink_to() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_symlink_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create symbolic links from the paths to the target paths. — Path_symlink_to","text":"","code":"Path_symlink_to(paths, targets)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_symlink_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create symbolic links from the paths to the target paths. — Path_symlink_to","text":"paths character vector source file paths. targets character vector target file paths.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_symlink_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create symbolic links from the paths to the target paths. — Path_symlink_to","text":"","code":"if (FALSE) { Path_symlink_to(\"source_file.txt\", \"target_file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_touch.html","id":null,"dir":"Reference","previous_headings":"","what":"Touch files at the specified paths. — Path_touch","title":"Touch files at the specified paths. — Path_touch","text":"function creates files exist updates access modification times exist. Similar Unix touch command.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_touch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Touch files at the specified paths. — Path_touch","text":"","code":"Path_touch(paths)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_touch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Touch files at the specified paths. — Path_touch","text":"paths character vector file paths touch.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_touch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Touch files at the specified paths. — Path_touch","text":"","code":"if (FALSE) { Path_touch(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_unlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink (delete) files at the specified paths. — Path_unlink","title":"Unlink (delete) files at the specified paths. — Path_unlink","text":"function unlinks (deletes) files specified paths. remove directories. missing_ok argument set FALSE, checks files exist attempting unlink . Similar Python's pathlib.Path.unlink() method.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_unlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink (delete) files at the specified paths. — Path_unlink","text":"","code":"Path_unlink(paths, missing_ok = FALSE)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_unlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink (delete) files at the specified paths. — Path_unlink","text":"paths character vector file paths unlink. missing_ok Logical. TRUE, allow unlinking non-existent files.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_unlink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlink (delete) files at the specified paths. — Path_unlink","text":"","code":"if (FALSE) { Path_unlink(\"file.txt\") }"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_write_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Write text to a file at the specified path. — Path_write_text","title":"Write text to a file at the specified path. — Path_write_text","text":"function writes provided text file specified path.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_write_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write text to a file at the specified path. — Path_write_text","text":"","code":"Path_write_text(path, text)"},{"path":"https://pythonicr.github.io/pathlib/reference/Path_write_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write text to a file at the specified path. — Path_write_text","text":"path character vector specifying path file. text text write file.","code":""},{"path":"https://pythonicr.github.io/pathlib/reference/Path_write_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write text to a file at the specified path. — Path_write_text","text":"","code":"if (FALSE) { Path_write_text(\"file.txt\", \"Hello, World!\") }"}]
